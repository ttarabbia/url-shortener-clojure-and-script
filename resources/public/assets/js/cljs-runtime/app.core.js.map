{"version":3,"sources":["app/core.cljs"],"mappings":";;AAUA,AAAA;AAAA,eAAA,iBAAAA,WAAA,8BAAAC,qBAAAC,9FAAOK;AAAP,AAAA,IAAAJ,aAAA,mFAAA,AAAAC,8BAAAH,sBAAAC;AAAA,AAAA;AACE,IAAAM,aAAwB,sBAAA,2CAAA,qDAAA,KAAA,kDAAA,7KAACI;YAAzB,AAAAH,4CAAAD,WAAA,IAAA,nEAAOE;gBAAP,AAAAD,4CAAAD,WAAA,IAAA,vEAAaG;IAEPE,aAAW;AAAA,AACE,OAAAC,wBAAA,AAAAC,2BAAA,MAAA,WAAAC;AAAA,AAAA,OAAAF,wBAAA,AAAAC,yiBAAA,WAAQG,zhBACA,MAAA,NAACC,uBAA0B,qBAAA,2CAAA,2DAAA,2CAAA,qEAAA,2BAAA,uDAAA,OAAA,pUAACC,0XAEe,eAAA,fAACC,wBAA4B,AAAA,gFAAMX;AAHtF,AAAA,OAAAI,wBAAA,AAAAC,6CAAA,WAIQO,7BAAS,AAAOJ;AAJxB,AAAA,OAAAJ,wBAAA,AAAAC,uOAAA,WAKQQ,vNAAK,qHAAA,2EAAA,hMAACC,0DAAQF;AALtB,AAAA,OAAAR,wBAAA,AAAAC,2BAAA,MAAA,WAAAE;AAAA,AAAA,OAAAF,2BAMO,iBAAAU,WAAWG;IAAXF,WAAA;IAAAC,WAAuB,AAAA,mFAAOJ;AAA9B,AAAA,0FAAAE,SAAAC,SAAAC,gCAAAF,SAAAC,SAAAC,tJAAChB,0CAAAA,sEAAAA;;;;;;;;IACrBkB,gBAAc,qEAAA,2IAAA,nKAAK,AAAUC,wEAAwB,AAAA,mFAAOpB;AAVlE,AAwJG,OAAA,AAAA6B,qCAAA,MAAA,iBAAAC,WAAA,EAAA,YAAA;AAAA,AAAAA;KA3IA,kBAAI,AAAA,mFAAO9B,sIACUmB,9EA0IrB,AAAA,AAAAU,qCAAA,IAAA,iBAAAE,WAAA,EAAA,vHAKA,AAAA,AAAAF,qCAAA,MAAA;AALA,AAAAE;KA1IoCZ,uPAGhB,AAAA,gFAAMnB,jMAuI1B,AAAA,AAAA6B,qCAAA,QAAA,iBAAAG,WAAA,EAAA,QAAA,AAAAC,sHAAA,WAAA,WAAAT,rVAKA,AAAA,AAAAK,qCAAA,MAAA,KAAA,AAAA,AAAAA,qCAAA,KAAA,KAAA;AA3IyB,IAAAR,WAAWH,fAsIpC;IAtIyBI,WAAA;IAAAC,WAAsB,AAAA,AAAAC;AAAtB,AAAA,0FAAAH,SAAAC,SAAAC,gCAAAF,SAAAC,SAAAC,tJAACtB,0CAAAA,sEAAAA;GAsI1B,YAAA,mDAAA,cAAA;AAAA,AAAA+B;MAAA,AAAA,AAAAH,qCAAA,SAAA,iBAAAK,WAAA,EAAA,UAAA;AAnIyB,OAAC/B,PAmI1B;GAAA,YAAA;AAAA,AAAA+B;KAAA;;AAzJL,AAAA,GAAA,AAAAvC;AAAA,IAAAC,WAAAN;AAAA,AAAA,CAAA,AAAAM,uBAAA;;AAAAA;;AAAAN;;;;AAAA;AAAA;AAAOO,AA8BP,gBAAA,hBAAe4B;AAAf,AACE,IAAMC,OAAK,AAACC,gDAAgB,wBAAA,xBAACC;AAA7B,AACE,OAASF,iDAAQ7B,rCAcR,AAAA,AAAAgC,kDAAA","names":["G__36645","props__31095__auto__","maybe-ref__31096__auto__","vec__36646","helix.core/extract-cljs-props","goog/DEBUG","G__36666","app.core/app","vec__36649","cljs.core.nth","state","set-state","helix.hooks/use-state","fetch-slug","promesa.protocols/-bind","promesa.protocols/-promise","___33031__auto__","___33016__auto__","_response","js/fetch","cljs.core/clj->js","js/JSON.stringify","response","data","cljs.core.js__GT_clj","G__36652","G__36653","G__36654","cljs.core/assoc","redirect-link","js/window.location","G__36661","G__36662","G__36663","p1__36643#","app.core/init","root","js/module$node_modules$react_dom$client.createRoot","js/document.getElementById","helix.core/get-react","obj36656","obj36658","obj36660","helix.impl.props/or-undefined","obj36665"],"sourcesContent":["(ns app.core\n  (:require [helix.core :refer [defnc $]]\n            [helix.hooks :as hooks]\n            [helix.dom :as d]\n            [\"react-dom/client\" :as rdom]\n            [promesa.core :as p]))\n\n  \n\n\n(defnc app []\n  (let [[state set-state] (hooks/use-state {:slug nil\n                                            :url \"\"})\n        fetch-slug (fn []\n                     (p/let [_response\n                             (js/fetch \"/api/redirect/\" (clj->js {:headers {:Content-Type \"application/json\"}\n                                                                  :method \"POST\"\n                                                                  :body (js/JSON.stringify #js {:url (:url state)})}))\n                             response (.json _response)\n                             data (js->clj response :keywordize-keys true)] \n                            (set-state assoc :slug (:slug data))))\n        redirect-link (str (.-origin js/window.location) \"/\" (:slug state) \"/\")]\n    \n    (d/div {:class-name \"grid place-items-center h-screen bg-pink-100\"}\n     (if (:slug state)\n       (d/div (d/a {:href redirect-link} redirect-link))\n       (d/div\n        (d/h1 \"Enter your URL here\")\n        (d/input {:value (:url state)\n                  :on-change #(set-state assoc :url (.. % -target -value))\n                  :class-name \"form-control border border-solid border-gray-600\"\n                  :placeholder \"Enter URL\"})\n        (d/button {:on-click #(fetch-slug)\n                   :class-name \"border-2 rounded px-4 font-extrabold uppercase bg-blue-50\"} \"shorten Url\")))\n     )))\n\n\n\n\n\n(defn ^:export init []\n  (let [root (rdom/createRoot (js/document.getElementById \"app\"))]\n    (.render root ($ app))))"]}